/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./appController.js":
/*!**************************!*\
  !*** ./appController.js ***!
  \**************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ AppController\n/* harmony export */ });\n/* harmony import */ var _appModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./appModel */ \"./appModel.js\");\n/* harmony import */ var _appView__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./appView */ \"./appView.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ \"./constants.js\");\n\n\n\n\nlet cardClicked = false;\nlet playMode = false;\nlet gameStarted = false;\nlet wordNumbers = [];\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nclass AppController {\n  cancelGame() {\n    gameStarted = false;\n  }\n\n  showWordTranslation() {\n    const frontSide = document.querySelectorAll('.front');\n    const backSide = document.querySelectorAll('.back');\n    const showTranslationButtons = document.querySelectorAll('.rotate-icon');\n\n    showTranslationButtons.forEach((elem, number) => {\n      elem.addEventListener('click', () => {\n        cardClicked = true;\n        frontSide[number].style.transform = 'rotateY(180deg)';\n        backSide[number].style.transform = 'rotateY(360deg)';\n      });\n    });\n  }\n\n  hideWordTranslation() {\n    const cardList = document.querySelectorAll('.card');\n    const frontSide = document.querySelectorAll('.front');\n    const backSide = document.querySelectorAll('.back');\n\n    cardList.forEach((elem, number) => {\n      elem.addEventListener('click', () => {\n        frontSide[number].style.transform = '';\n        backSide[number].style.transform = '';\n        cardClicked = false;\n      });\n    });\n  }\n\n  playWordAudioRecording() {\n    const wordRecordsList = document.querySelectorAll('.word-recording');\n    const cardWord = document.querySelectorAll('.front .card-word-text');\n    const frontSide = document.querySelectorAll('.front');\n\n    frontSide.forEach((elem, number) => {\n      elem.addEventListener('click', () => {\n        if (cardClicked || playMode) {\n          return;\n        }\n        wordRecordsList[number].play();\n        const wordData = JSON.parse(localStorage[`${cardWord[number].innerHTML}`]);\n        wordData.trainClicked += 1;\n        localStorage[`${cardWord[number].innerHTML}`] = JSON.stringify(wordData);\n      });\n    });\n  }\n\n  turnOffPlayMode() {\n    const startGameBlock = document.querySelector('.start-game');\n    const startGameButton = document.querySelector('.start-game__btn');\n    const cardWordEnglish = document.querySelectorAll('.front .card-word');\n    const cardFrontImg = document.querySelectorAll('.front .card-img');\n    const answers = document.querySelector('.answers');\n    const showTranslationButtons = document.querySelectorAll('.rotate-icon');\n    const cardList = document.querySelectorAll('.card');\n    startGameBlock.classList.remove('visible');\n    gameStarted = false;\n    playMode = false;\n\n    while (answers.firstChild) {\n      answers.removeChild(answers.firstChild);\n    }\n\n    cardList.forEach((element) => {\n      element.style.opacity = '';\n      element.classList.remove('unactive');\n    });\n\n    showTranslationButtons.forEach((element) => {\n      element.classList.remove('hidden');\n    });\n\n    cardWordEnglish.forEach((element) => {\n      element.classList.remove('hidden');\n    });\n\n    cardFrontImg.forEach((element) => {\n      element.classList.remove('full-card-img');\n    });\n\n    startGameButton.classList.remove('replay-record__btn');\n  }\n\n  turnOnPlayMode() {\n    const cardWordEnglish = document.querySelectorAll('.front .card-word');\n    const cardFrontImg = document.querySelectorAll('.front .card-img');\n    const startGameBlock = document.querySelector('.start-game');\n    const showTranslationButtons = document.querySelectorAll('.rotate-icon');\n    const startGameButton = document.querySelector('.start-game__btn');\n    const cardsPage = document.querySelector('.cards-list');\n\n    playMode = true;\n\n    showTranslationButtons.forEach((element) => {\n      element.classList.add('hidden');\n    });\n\n    cardWordEnglish.forEach((element) => {\n      element.classList.add('hidden');\n    });\n\n    cardFrontImg.forEach((element) => {\n      element.classList.add('full-card-img');\n    });\n\n    startGameButton.innerHTML = 'Start game';\n\n    if (!cardsPage.classList.contains('hidden')) {\n      startGameBlock.classList.add('visible');\n    }\n  }\n\n  startGame() {\n    const startGameButton = document.querySelector('.start-game__btn');\n    const wordRecordsList = document.querySelectorAll('.word-recording');\n    const correctAnswersQuantity = document.querySelectorAll('.unactive');\n    const correctAnswersCounter = _constants__WEBPACK_IMPORTED_MODULE_2__.CATEGORY_WORDS_QUANTITY - (wordRecordsList.length - correctAnswersQuantity.length);\n\n    if (!gameStarted) {\n      gameStarted = true;\n      const set = new Set();\n\n      while (set.size < _constants__WEBPACK_IMPORTED_MODULE_2__.CATEGORY_WORDS_QUANTITY) {\n        set.add(getRandomInt(0, 7));\n      }\n\n      wordNumbers = Array.from(set);\n\n      const game = new _appModel__WEBPACK_IMPORTED_MODULE_0__.default(gameStarted, playMode, wordNumbers);\n      game.checkIsAnswerCorrect();\n      wordRecordsList[wordNumbers[0]].play();\n      startGameButton.innerHTML = '<i class=\"material-icons\">replay</i>';\n      startGameButton.classList.add('replay-record__btn');\n    } else {\n      wordRecordsList[wordNumbers[correctAnswersCounter]].play();\n    }\n  }\n\n  addButtonEventListeners() {\n    const modeSwitch = document.querySelector('.onoffswitch-checkbox');\n    const startGameButton = document.querySelector('.start-game__btn');\n    const resetStatisticButton = document.querySelector('.reset-statistic__btn');\n    const burgerMenuPageLinks = document.querySelectorAll('.nav-link');\n    const answers = document.querySelector('.answers');\n    const cardList = document.querySelectorAll('.card');\n\n    burgerMenuPageLinks.forEach((elem) => {\n      elem.addEventListener('click', () => {\n        startGameButton.classList.remove('replay-record__btn');\n        startGameButton.innerHTML = 'Start game';\n        gameStarted = false;\n        while (answers.firstChild) {\n          answers.removeChild(answers.firstChild);\n        }\n        cardList.forEach((element) => {\n          element.style.opacity = '';\n        });\n      });\n    });\n\n    modeSwitch.addEventListener('click', () => {\n      if (!playMode) {\n        this.turnOnPlayMode();\n      } else {\n        this.turnOffPlayMode();\n      }\n    });\n\n    resetStatisticButton.addEventListener('click', () => {\n      _appView__WEBPACK_IMPORTED_MODULE_1__.default.prototype.writeStartWordsData();\n      _appView__WEBPACK_IMPORTED_MODULE_1__.default.prototype.renderStatisticPage();\n    });\n\n    startGameButton.addEventListener('click', this.startGame);\n  }\n\n  addBurgerMenuEventListeners() {\n    const burgerMenuIcon = document.querySelector('.burger-menu-icon');\n    const bodyShadow = document.querySelector('.shadow');\n\n    burgerMenuIcon.addEventListener('click', () => {\n      const burgerMenu = document.querySelector('.burger-menu');\n\n      if (!burgerMenu.classList.contains('burger-menu-opened')) {\n        _appView__WEBPACK_IMPORTED_MODULE_1__.default.prototype.openBurgerMenu();\n      } else {\n        _appView__WEBPACK_IMPORTED_MODULE_1__.default.prototype.closeBurgerMenu();\n      }\n    });\n\n    bodyShadow.addEventListener('click', () => {\n      const burgerMenu = document.querySelector('.burger-menu');\n\n      if (!burgerMenu.classList.contains('burger-menu-opened')) {\n        _appView__WEBPACK_IMPORTED_MODULE_1__.default.prototype.openBurgerMenu();\n      } else {\n        _appView__WEBPACK_IMPORTED_MODULE_1__.default.prototype.closeBurgerMenu();\n      }\n    });\n  }\n}\n\nconst controller = new AppController();\ncontroller.showWordTranslation();\ncontroller.hideWordTranslation();\ncontroller.playWordAudioRecording();\ncontroller.addButtonEventListeners();\ncontroller.addBurgerMenuEventListeners();\n\n\n//# sourceURL=webpack://english-for-kids/./appController.js?");

/***/ }),

/***/ "./appModel.js":
/*!*********************!*\
  !*** ./appModel.js ***!
  \*********************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ AppModel\n/* harmony export */ });\n/* harmony import */ var _appView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./appView */ \"./appView.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./constants.js\");\n/* harmony import */ var _appController__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./appController */ \"./appController.js\");\n\n\n\n\nconst correctAnswerSound = document.querySelector('.correct-answer-sound');\nconst wrongAnswerSound = document.querySelector('.wrong-answer-sound');\nconst wordRecordsList = document.querySelectorAll('.word-recording');\nconst cardList = document.querySelectorAll('.card');\nconst modeSwitch = document.querySelector('.onoffswitch-checkbox');\nconst cardWord = document.querySelectorAll('.front .card-word-text');\nconst burgerMenuPageLinks = document.querySelectorAll('.nav-link');\nconst correctResult = 'right';\nconst wrongResult = 'wrong';\n\nlet correctWordsCounter = 0;\nlet mistakes = 0;\n\nclass AppModel {\n  constructor(gameStarted, playMode, wordNumbers) {\n    this.gameStarted = gameStarted;\n    this.playMode = playMode;\n    this.wordNumbers = wordNumbers;\n  }\n\n  checkIsAnswerCorrect() {\n    correctWordsCounter = 0;\n    mistakes = 0;\n    for (let i = 0; i < _constants__WEBPACK_IMPORTED_MODULE_1__.CATEGORY_WORDS_QUANTITY; i += 1) {\n      cardList[i].setAttribute('card-number', `${i}`);\n    }\n    const addButtonClickListeners = (e) => {\n      const cardNumber = +e.currentTarget.getAttribute('card-number');\n\n      if (!this.gameStarted || !this.playMode) {\n        return;\n      }\n\n      if (cardNumber === this.wordNumbers[correctWordsCounter]) {\n        this.countCorrectAnswers(cardNumber);\n        this.countAnswersAccuracy(cardNumber);\n        correctAnswerSound.play();\n        _appView__WEBPACK_IMPORTED_MODULE_0__.default.prototype.addAnswerResult(correctResult);\n        cardList[cardNumber].style.opacity = 0.5;\n        cardList[cardNumber].classList.add('unactive');\n\n        if (correctWordsCounter < _constants__WEBPACK_IMPORTED_MODULE_1__.CATEGORY_WORDS_QUANTITY - 1) {\n          correctWordsCounter += 1;\n          setTimeout(() => {\n            wordRecordsList[this.wordNumbers[correctWordsCounter]].play();\n          }, 1500);\n        } else {\n          cardList.forEach((elem) => {\n            elem.removeEventListener('click', addButtonClickListeners);\n          });\n\n          setTimeout(() => {\n            this.showEndGameWindow();\n          }, 1000);\n        }\n      } else if (!cardList[cardNumber].classList.contains('unactive')) {\n        this.countWrongAnswers(cardNumber);\n        this.countAnswersAccuracy(cardNumber);\n        wrongAnswerSound.play();\n        mistakes += 1;\n        _appView__WEBPACK_IMPORTED_MODULE_0__.default.prototype.addAnswerResult(wrongResult);\n      }\n    };\n\n    const removeButtonClickListeners = () => {\n      if (!this.playMode) {\n        return;\n      }\n      this.playMode = false;\n      cardList.forEach((elem) => {\n        elem.removeEventListener('click', addButtonClickListeners);\n      });\n    };\n\n    cardList.forEach((elem) => {\n      elem.addEventListener('click', addButtonClickListeners);\n    });\n\n    modeSwitch.addEventListener('click', removeButtonClickListeners);\n    burgerMenuPageLinks.forEach((elem) => {\n      elem.addEventListener('click', removeButtonClickListeners);\n    });\n  }\n\n  countCorrectAnswers(cardNumber) {\n    const wordData = JSON.parse(localStorage[`${cardWord[cardNumber].innerHTML}`]);\n    wordData.correct += 1;\n    localStorage[`${cardWord[cardNumber].innerHTML}`] = JSON.stringify(wordData);\n  }\n\n  countWrongAnswers(cardNumber) {\n    const wordData = JSON.parse(localStorage[`${cardWord[cardNumber].innerHTML}`]);\n    wordData.wrong += 1;\n    localStorage[`${cardWord[cardNumber].innerHTML}`] = JSON.stringify(wordData);\n  }\n\n  countAnswersAccuracy(cardNumber) {\n    const wordData = JSON.parse(localStorage[`${cardWord[cardNumber].innerHTML}`]); // cardWord[cardNumber].innerHTML is the text of clicked card\n    if (wordData.wrong !== 0) {\n      wordData.accuracy = ((wordData.correct / (wordData.wrong + wordData.correct)) * 100).toFixed(1); // multiply on 100%\n    } else if (wordData.correct === 0) {\n      wordData.accuracy = 0;\n    } else {\n      wordData.accuracy = 100; // it means 100%\n    }\n    localStorage[`${cardWord[cardNumber].innerHTML}`] = JSON.stringify(wordData);\n  }\n\n  showEndGameWindow() {\n    const successResultSound = document.querySelector('.success-result');\n    const faliResultSound = document.querySelector('.failure-result');\n    const endGameModal = document.querySelector('.end-game-modal');\n    const endGameMessage = document.querySelector('.end-game-message');\n    const modalImg = document.querySelector('.modal-img');\n    const body = document.querySelector('body');\n\n    endGameModal.classList.add('end-game-modal_visible');\n    body.classList.add('no-scroll');\n\n    if (mistakes !== 0) {\n      faliResultSound.play();\n      modalImg.src = './assets/images/failure.jpg';\n      endGameMessage.innerHTML = `You've got ${mistakes} mistakes`;\n      mistakes = 0;\n      correctWordsCounter = 0;\n    } else {\n      successResultSound.play();\n      modalImg.src = './assets/images/success.jpg';\n      endGameMessage.innerHTML = 'You are win!';\n      mistakes = 0;\n      correctWordsCounter = 0;\n    }\n    this.endCurrentGame();\n  }\n\n  endCurrentGame() {\n    const body = document.querySelector('body');\n    const mainPage = document.querySelector('.categories');\n    const cardsPage = document.querySelector('.cards-list');\n    const answers = document.querySelector('.answers');\n    const endGameModal = document.querySelector('.end-game-modal');\n    const startGameBlock = document.querySelector('.start-game');\n    const startGameButton = document.querySelector('.start-game__btn');\n\n    cardList.forEach((elem) => {\n      elem.style.opacity = '';\n      elem.classList.remove('unactive');\n    });\n\n    this.gameStarted = false;\n    _appController__WEBPACK_IMPORTED_MODULE_2__.default.prototype.cancelGame();\n\n    setTimeout(() => {\n      mainPage.classList.remove('hidden');\n      cardsPage.classList.add('hidden');\n      endGameModal.classList.remove('end-game-modal_visible');\n      body.classList.remove('no-scroll');\n      startGameBlock.classList.remove('visible');\n      startGameButton.innerHTML = 'Start game';\n      startGameButton.classList.remove('replay-record__btn');\n\n      while (answers.firstChild) {\n        answers.removeChild(answers.firstChild);\n      }\n    }, 2500);\n  }\n}\n\n\n//# sourceURL=webpack://english-for-kids/./appModel.js?");

/***/ }),

/***/ "./appView.js":
/*!********************!*\
  !*** ./appView.js ***!
  \********************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ AppView\n/* harmony export */ });\n/* harmony import */ var _cards__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cards */ \"./cards.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./constants.js\");\n\n\n\nlet currentPage = 0;\n\nclass AppView {\n  constructor(pageNumber) {\n    this.pageNumber = pageNumber;\n  }\n\n  renderCardsPage() {\n    const cardWordEnglish = document.querySelectorAll('.front .card-word p');\n    const cardWordRus = document.querySelectorAll('.back .card-word p');\n    const cardFrontImg = document.querySelectorAll('.front .card-img');\n    const cardBackImg = document.querySelectorAll('.back .card-img');\n    const onOffSwitchInner = document.querySelector('.onoffswitch-inner');\n    const onOffSwitch = document.querySelector('.onoffswitch-switch');\n    const wordRecordsList = document.querySelectorAll('.word-recording');\n\n    for (let i = 0; i < _constants__WEBPACK_IMPORTED_MODULE_1__.CATEGORY_WORDS_QUANTITY; i += 1) {\n      cardWordEnglish[i].innerHTML = _cards__WEBPACK_IMPORTED_MODULE_0__.cards[this.pageNumber][i].word;\n      cardWordRus[i].innerHTML = _cards__WEBPACK_IMPORTED_MODULE_0__.cards[this.pageNumber][i].translation;\n      cardFrontImg[i].src = _cards__WEBPACK_IMPORTED_MODULE_0__.cards[this.pageNumber][i].image;\n      cardBackImg[i].src = _cards__WEBPACK_IMPORTED_MODULE_0__.cards[this.pageNumber][i].image;\n      wordRecordsList[i].src = _cards__WEBPACK_IMPORTED_MODULE_0__.cards[this.pageNumber][i].audioSrc;\n    }\n\n    setTimeout(() => {\n      onOffSwitch.style.transition = '0.3s';\n      onOffSwitchInner.style.transition = '0.3s';\n    }, 200);\n  }\n\n  renderStatisticPage() {\n    const statisticTable = document.querySelector('.statistic');\n\n    while (statisticTable.children.length !== 1) {\n      statisticTable.removeChild(statisticTable.lastChild);\n    }\n    for (let i = 1; i < _cards__WEBPACK_IMPORTED_MODULE_0__.cards.length; i += 1) {\n      for (let j = 0; j < _cards__WEBPACK_IMPORTED_MODULE_0__.cards[i].length; j += 1) {\n        const wordStatistic = document.createElement('tr');\n        wordStatistic.className = 'word-statistic';\n        for (let k = 0; k < _constants__WEBPACK_IMPORTED_MODULE_1__.STATISTIC_DATA_TYPES_QUANTITY; k += 1) {\n          const wordData = document.createElement('td');\n          wordData.className = 'statistic-data';\n          const currentWordStatistic = JSON.parse(localStorage[`${_cards__WEBPACK_IMPORTED_MODULE_0__.cards[i][j].word}`]);\n\n          switch (k) {\n            case 0:\n              wordData.innerHTML = `${_cards__WEBPACK_IMPORTED_MODULE_0__.cards[0][i - 1]}`;\n              break;\n            case 1:\n              wordData.innerHTML = `${_cards__WEBPACK_IMPORTED_MODULE_0__.cards[i][j].word}`;\n              break;\n            case 2:\n              wordData.innerHTML = `${_cards__WEBPACK_IMPORTED_MODULE_0__.cards[i][j].translation}`;\n              break;\n            case 3:\n              wordData.innerHTML = currentWordStatistic.trainClicked;\n              break;\n            case 4:\n              wordData.innerHTML = currentWordStatistic.correct;\n              break;\n            case 5:\n              wordData.innerHTML = currentWordStatistic.wrong;\n              break;\n            case 6:\n              wordData.innerHTML = currentWordStatistic.accuracy;\n              break;\n            default:\n          }\n          wordStatistic.appendChild(wordData);\n        }\n        statisticTable.appendChild(wordStatistic);\n      }\n    }\n  }\n\n  openBurgerMenu() {\n    const body = document.querySelector('body');\n    const bodyShadow = document.querySelector('.shadow');\n    const burgerMenu = document.querySelector('.burger-menu');\n    const burgerMenuIcon = document.querySelector('.burger-menu-icon');\n\n    burgerMenu.classList.add('burger-menu-opened');\n    body.classList.add('no-scroll');\n    bodyShadow.classList.add('visible');\n    burgerMenuIcon.style.transform = 'rotate(90deg)';\n  }\n\n  closeBurgerMenu() {\n    const body = document.querySelector('body');\n    const bodyShadow = document.querySelector('.shadow');\n    const burgerMenu = document.querySelector('.burger-menu');\n    const burgerMenuIcon = document.querySelector('.burger-menu-icon');\n\n    burgerMenu.classList.remove('burger-menu-opened');\n    body.classList.remove('no-scroll');\n    bodyShadow.classList.remove('visible');\n    burgerMenuIcon.style.transform = '';\n  }\n\n  addAnswerResult(result) {\n    const answers = document.querySelector('.answers');\n    const answerResult = document.createElement('img');\n\n    answerResult.src = `./assets/images/${result}.png`;\n    answerResult.className = 'answers__img';\n    answers.prepend(answerResult);\n  }\n\n  writeStartWordsData() {\n    for (let i = 1; i < _cards__WEBPACK_IMPORTED_MODULE_0__.cards.length; i += 1) {\n      for (let j = 0; j < _cards__WEBPACK_IMPORTED_MODULE_0__.cards[i].length; j += 1) {\n        const wordData = {\n          trainClicked: 0,\n          correct: 0,\n          wrong: 0,\n          accuracy: 0,\n        };\n        localStorage[`${_cards__WEBPACK_IMPORTED_MODULE_0__.cards[i][j].word}`] = JSON.stringify(wordData);\n      }\n    }\n  }\n\n  openCategoryPage() {\n    const categoriesLinks = document.querySelectorAll('.categories__item');\n    const mainPage = document.querySelector('.categories');\n    const cardsPage = document.querySelector('.cards-list');\n    const startGameBlock = document.querySelector('.start-game');\n    const modeSwitch = document.querySelector('.onoffswitch-checkbox');\n    const burgerMenuPageLinks = document.querySelectorAll('.nav-link');\n\n    for (let i = 0; i < _constants__WEBPACK_IMPORTED_MODULE_1__.CATEGORIES_QUANTITY; i += 1) {\n      categoriesLinks[i].addEventListener('click', () => {\n        burgerMenuPageLinks[currentPage].classList.remove('nav-link_active');\n        currentPage = i + 1;\n        burgerMenuPageLinks[currentPage].classList.add('nav-link_active');\n        mainPage.classList.add('hidden');\n        cardsPage.classList.remove('hidden');\n\n        if (modeSwitch.checked) {\n          startGameBlock.classList.add('visible');\n        }\n\n        const currentCategoryPage = new AppView(currentPage);\n        currentCategoryPage.renderCardsPage();\n      });\n    }\n  }\n\n  openPageFromBurgerMenuLinks() {\n    const mainPage = document.querySelector('.categories');\n    const cardsPage = document.querySelector('.cards-list');\n    const statisticPage = document.querySelector('.statistic-page');\n    const burgerMenuPageLinks = document.querySelectorAll('.nav-link');\n    const startGameBlock = document.querySelector('.start-game');\n    const modeSwitch = document.querySelector('.onoffswitch-checkbox');\n\n    for (let i = 0; i < _constants__WEBPACK_IMPORTED_MODULE_1__.BURGER_MENU_ITEMS; i += 1) {\n      burgerMenuPageLinks[i].addEventListener('click', () => {\n        burgerMenuPageLinks[currentPage].classList.remove('nav-link_active');\n        currentPage = i;\n        burgerMenuPageLinks[currentPage].classList.add('nav-link_active');\n        this.closeBurgerMenu();\n\n        if (currentPage === _constants__WEBPACK_IMPORTED_MODULE_1__.MAIN_PAGE_NUMBER) {\n          cardsPage.classList.add('hidden');\n          mainPage.classList.remove('hidden');\n          statisticPage.classList.add('hidden');\n          startGameBlock.classList.remove('visible');\n        } else if (currentPage === _constants__WEBPACK_IMPORTED_MODULE_1__.STATISTIC_PAGE_NUMBER) {\n          statisticPage.classList.remove('hidden');\n          mainPage.classList.add('hidden');\n          cardsPage.classList.add('hidden');\n          startGameBlock.classList.remove('visible');\n          const currentCategoryPage = new AppView(currentPage);\n          currentCategoryPage.renderStatisticPage();\n        } else {\n          mainPage.classList.add('hidden');\n          cardsPage.classList.remove('hidden');\n          statisticPage.classList.add('hidden');\n          const currentCategoryPage = new AppView(currentPage);\n          currentCategoryPage.renderCardsPage();\n\n          if (modeSwitch.checked) {\n            startGameBlock.classList.add('visible');\n          }\n        }\n      });\n    }\n  }\n}\n\nAppView.prototype.openCategoryPage();\nAppView.prototype.openPageFromBurgerMenuLinks();\n\nif (localStorage.length !== _constants__WEBPACK_IMPORTED_MODULE_1__.FULL_WORDS_LIST - 1 && !localStorage.pie) {\n  AppView.prototype.writeStartWordsData();\n}\n\n\n//# sourceURL=webpack://english-for-kids/./appView.js?");

/***/ }),

/***/ "./cards.js":
/*!******************!*\
  !*** ./cards.js ***!
  \******************/
/*! namespace exports */
/*! export cards [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cards\": () => /* binding */ cards\n/* harmony export */ });\nconst cards = [\r\n  ['Action (set A)', 'Action (set B)', 'Colours', 'Food', 'Animal (set A)', 'Animal (set B)', 'Clothes', 'Emotions'],\r\n  [\r\n    {\r\n      word: 'cry',\r\n      translation: 'плакать',\r\n      image: './assets/images/cry.jpg',\r\n      audioSrc: './assets/audio/cry.mp3',\r\n    },\r\n    {\r\n      word: 'dance',\r\n      translation: 'танцевать',\r\n      image: './assets/images/dance.jpg',\r\n      audioSrc: './assets/audio/dance.mp3',\r\n    },\r\n    {\r\n      word: 'dive',\r\n      translation: 'нырять',\r\n      image: './assets/images/dive.jpg',\r\n      audioSrc: './assets/audio/dive.mp3',\r\n    },\r\n    {\r\n      word: 'draw',\r\n      translation: 'рисовать',\r\n      image: './assets/images/draw.jpg',\r\n      audioSrc: './assets/audio/draw.mp3',\r\n    },\r\n    {\r\n      word: 'fish',\r\n      translation: 'ловить рыбу',\r\n      image: './assets/images/fish.jpg',\r\n      audioSrc: './assets/audio/fish.mp3',\r\n    },\r\n    {\r\n      word: 'fly',\r\n      translation: 'летать',\r\n      image: './assets/images/fly.jpg',\r\n      audioSrc: './assets/audio/fly.mp3',\r\n    },\r\n    {\r\n      word: 'hug',\r\n      translation: 'обнимать',\r\n      image: './assets/images/hug.jpg',\r\n      audioSrc: './assets/audio/hug.mp3',\r\n    },\r\n    {\r\n      word: 'jump',\r\n      translation: 'прыгать',\r\n      image: './assets/images/jump.jpg',\r\n      audioSrc: './assets/audio/jump.mp3',\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      word: 'open',\r\n      translation: 'открывать',\r\n      image: './assets/images/open.jpg',\r\n      audioSrc: './assets/audio/open.mp3',\r\n    },\r\n    {\r\n      word: 'play',\r\n      translation: 'играть',\r\n      image: './assets/images/play.jpg',\r\n      audioSrc: './assets/audio/play.mp3',\r\n    },\r\n    {\r\n      word: 'point',\r\n      translation: 'указывать',\r\n      image: './assets/images/point.jpg',\r\n      audioSrc: './assets/audio/point.mp3',\r\n    },\r\n    {\r\n      word: 'ride',\r\n      translation: 'ездить',\r\n      image: './assets/images/ride.jpg',\r\n      audioSrc: './assets/audio/ride.mp3',\r\n    },\r\n    {\r\n      word: 'run',\r\n      translation: 'бегать',\r\n      image: './assets/images/run.jpg',\r\n      audioSrc: './assets/audio/run.mp3',\r\n    },\r\n    {\r\n      word: 'sing',\r\n      translation: 'петь',\r\n      image: './assets/images/sing.jpg',\r\n      audioSrc: './assets/audio/sing.mp3',\r\n    },\r\n    {\r\n      word: 'skip',\r\n      translation: 'пропускать, прыгать',\r\n      image: './assets/images/skip.jpg',\r\n      audioSrc: './assets/audio/skip.mp3',\r\n    },\r\n    {\r\n      word: 'swim',\r\n      translation: 'плавать',\r\n      image: './assets/images/swim.jpg',\r\n      audioSrc: './assets/audio/swim.mp3',\r\n    },\r\n  ],\r\n\r\n  [\r\n    {\r\n      word: 'red',\r\n      translation: 'красный',\r\n      image: './assets/images/red.jpg',\r\n      audioSrc: './assets/audio/red.mp3',\r\n    },\r\n    {\r\n      word: 'green',\r\n      translation: 'зеленый',\r\n      image: './assets/images/green.jpg',\r\n      audioSrc: './assets/audio/green.mp3',\r\n    },\r\n    {\r\n      word: 'blue',\r\n      translation: 'синий',\r\n      image: './assets/images/blue.jpg',\r\n      audioSrc: './assets/audio/blue.mp3',\r\n    },\r\n    {\r\n      word: 'brown',\r\n      translation: 'коричневый',\r\n      image: './assets/images/brown.jpg',\r\n      audioSrc: './assets/audio/brown.mp3',\r\n    },\r\n    {\r\n      word: 'purple',\r\n      translation: 'фиолетовый',\r\n      image: './assets/images/purple.jpg',\r\n      audioSrc: './assets/audio/purple.mp3',\r\n    },\r\n    {\r\n      word: 'orange',\r\n      translation: 'оранжевый',\r\n      image: './assets/images/orange.jpg',\r\n      audioSrc: './assets/audio/orange.mp3',\r\n    },\r\n    {\r\n      word: 'yellow',\r\n      translation: 'желтый',\r\n      image: './assets/images/yellow.jpg',\r\n      audioSrc: './assets/audio/yellow.mp3',\r\n    },\r\n    {\r\n      word: 'white',\r\n      translation: 'белый',\r\n      image: './assets/images/white.jpg',\r\n      audioSrc: './assets/audio/white.mp3',\r\n    },\r\n  ],\r\n\r\n  [\r\n    {\r\n      word: 'apple',\r\n      translation: 'яблоко',\r\n      image: './assets/images/apple.jpg',\r\n      audioSrc: './assets/audio/apple.mp3',\r\n    },\r\n    {\r\n      word: 'cucumber',\r\n      translation: 'огурец',\r\n      image: './assets/images/cucumber.jpg',\r\n      audioSrc: './assets/audio/cucumber.mp3',\r\n    },\r\n    {\r\n      word: 'pie',\r\n      translation: 'пирог',\r\n      image: './assets/images/pie.jpg',\r\n      audioSrc: './assets/audio/pie.mp3',\r\n    },\r\n    {\r\n      word: 'cheese',\r\n      translation: 'сыр',\r\n      image: './assets/images/cheese.jpg',\r\n      audioSrc: './assets/audio/cheese.mp3',\r\n    },\r\n    {\r\n      word: 'tomato',\r\n      translation: 'помидор',\r\n      image: './assets/images/tomato.jpg',\r\n      audioSrc: './assets/audio/tomato.mp3',\r\n    },\r\n    {\r\n      word: 'porridge',\r\n      translation: 'каша',\r\n      image: './assets/images/porridge.jpg',\r\n      audioSrc: './assets/audio/porridge.mp3',\r\n    },\r\n    {\r\n      word: 'bread',\r\n      translation: 'хлеб',\r\n      image: './assets/images/bread.jpg',\r\n      audioSrc: './assets/audio/bread.mp3',\r\n    },\r\n    {\r\n      word: 'pancake',\r\n      translation: 'блинчик',\r\n      image: './assets/images/pancakes.jpg',\r\n      audioSrc: './assets/audio/pancake.mp3',\r\n    },\r\n  ],\r\n\r\n  [\r\n    {\r\n      word: 'cat',\r\n      translation: 'кот',\r\n      image: './assets/images/cat.jpg',\r\n      audioSrc: './assets/audio/cat.mp3',\r\n    },\r\n    {\r\n      word: 'chick',\r\n      translation: 'цыплёнок',\r\n      image: './assets/images/chick.jpg',\r\n      audioSrc: './assets/audio/chick.mp3',\r\n    },\r\n    {\r\n      word: 'chicken',\r\n      translation: 'курица',\r\n      image: './assets/images/chicken.jpg',\r\n      audioSrc: './assets/audio/chicken.mp3',\r\n    },\r\n    {\r\n      word: 'dog',\r\n      translation: 'собака',\r\n      image: './assets/images/dog.jpg',\r\n      audioSrc: './assets/audio/dog.mp3',\r\n    },\r\n    {\r\n      word: 'horse',\r\n      translation: 'лошадь',\r\n      image: './assets/images/horse.jpg',\r\n      audioSrc: './assets/audio/horse.mp3',\r\n    },\r\n    {\r\n      word: 'pig',\r\n      translation: 'свинья',\r\n      image: './assets/images/pig.jpg',\r\n      audioSrc: './assets/audio/pig.mp3',\r\n    },\r\n    {\r\n      word: 'rabbit',\r\n      translation: 'кролик',\r\n      image: './assets/images/rabbit.jpg',\r\n      audioSrc: './assets/audio/rabbit.mp3',\r\n    },\r\n    {\r\n      word: 'sheep',\r\n      translation: 'овца',\r\n      image: './assets/images/sheep.jpg',\r\n      audioSrc: './assets/audio/sheep.mp3',\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      word: 'bird',\r\n      translation: 'птица',\r\n      image: './assets/images/bird.jpg',\r\n      audioSrc: './assets/audio/bird.mp3',\r\n    },\r\n    {\r\n      word: 'fish',\r\n      translation: 'рыба',\r\n      image: './assets/images/fish1.jpg',\r\n      audioSrc: './assets/audio/fish.mp3',\r\n    },\r\n    {\r\n      word: 'frog',\r\n      translation: 'жаба',\r\n      image: './assets/images/frog.jpg',\r\n      audioSrc: './assets/audio/frog.mp3',\r\n    },\r\n    {\r\n      word: 'giraffe',\r\n      translation: 'жирафа',\r\n      image: './assets/images/giraffe.jpg',\r\n      audioSrc: './assets/audio/giraffe.mp3',\r\n    },\r\n    {\r\n      word: 'lion',\r\n      translation: 'лев',\r\n      image: './assets/images/lion.jpg',\r\n      audioSrc: './assets/audio/lion.mp3',\r\n    },\r\n    {\r\n      word: 'mouse',\r\n      translation: 'мышь',\r\n      image: './assets/images/mouse.jpg',\r\n      audioSrc: './assets/audio/mouse.mp3',\r\n    },\r\n    {\r\n      word: 'turtle',\r\n      translation: 'черепаха',\r\n      image: './assets/images/turtle.jpg',\r\n      audioSrc: './assets/audio/turtle.mp3',\r\n    },\r\n    {\r\n      word: 'dolphin',\r\n      translation: 'дельфин',\r\n      image: './assets/images/dolphin.jpg',\r\n      audioSrc: './assets/audio/dolphin.mp3',\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      word: 'skirt',\r\n      translation: 'юбка',\r\n      image: './assets/images/skirt.jpg',\r\n      audioSrc: './assets/audio/skirt.mp3',\r\n    },\r\n    {\r\n      word: 'pants',\r\n      translation: 'брюки',\r\n      image: './assets/images/pants.jpg',\r\n      audioSrc: './assets/audio/pants.mp3',\r\n    },\r\n    {\r\n      word: 'blouse',\r\n      translation: 'блузка',\r\n      image: './assets/images/blouse.jpg',\r\n      audioSrc: './assets/audio/blouse.mp3',\r\n    },\r\n    {\r\n      word: 'dress',\r\n      translation: 'платье',\r\n      image: './assets/images/dress.jpg',\r\n      audioSrc: './assets/audio/dress.mp3',\r\n    },\r\n    {\r\n      word: 'boot',\r\n      translation: 'ботинок',\r\n      image: './assets/images/boot.jpg',\r\n      audioSrc: './assets/audio/boot.mp3',\r\n    },\r\n    {\r\n      word: 'shirt',\r\n      translation: 'рубашка',\r\n      image: './assets/images/shirt.jpg',\r\n      audioSrc: './assets/audio/shirt.mp3',\r\n    },\r\n    {\r\n      word: 'coat',\r\n      translation: 'пальто',\r\n      image: './assets/images/coat.jpg',\r\n      audioSrc: './assets/audio/coat.mp3',\r\n    },\r\n    {\r\n      word: 'shoe',\r\n      translation: 'туфли',\r\n      image: './assets/images/shoe.jpg',\r\n      audioSrc: './assets/audio/shoe.mp3',\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      word: 'sad',\r\n      translation: 'грустный',\r\n      image: './assets/images/sad.jpg',\r\n      audioSrc: './assets/audio/sad.mp3',\r\n    },\r\n    {\r\n      word: 'angry',\r\n      translation: 'сердитый',\r\n      image: './assets/images/angry.jpg',\r\n      audioSrc: './assets/audio/angry.mp3',\r\n    },\r\n    {\r\n      word: 'happy',\r\n      translation: 'счастливый',\r\n      image: './assets/images/happy.jpg',\r\n      audioSrc: './assets/audio/happy.mp3',\r\n    },\r\n    {\r\n      word: 'tired',\r\n      translation: 'уставший',\r\n      image: './assets/images/tired.jpg',\r\n      audioSrc: './assets/audio/tired.mp3',\r\n    },\r\n    {\r\n      word: 'surprised',\r\n      translation: 'удивлённый',\r\n      image: './assets/images/surprised.jpg',\r\n      audioSrc: './assets/audio/surprised.mp3',\r\n    },\r\n    {\r\n      word: 'scared',\r\n      translation: 'испуганный',\r\n      image: './assets/images/scared.jpg',\r\n      audioSrc: './assets/audio/scared.mp3',\r\n    },\r\n    {\r\n      word: 'smile',\r\n      translation: 'улыбка',\r\n      image: './assets/images/smile.jpg',\r\n      audioSrc: './assets/audio/smile.mp3',\r\n    },\r\n    {\r\n      word: 'laugh',\r\n      translation: 'смех',\r\n      image: './assets/images/laugh.jpg',\r\n      audioSrc: './assets/audio/laugh.mp3',\r\n    },\r\n  ],\r\n];\r\n\n\n//# sourceURL=webpack://english-for-kids/./cards.js?");

/***/ }),

/***/ "./constants.js":
/*!**********************!*\
  !*** ./constants.js ***!
  \**********************/
/*! namespace exports */
/*! export BURGER_MENU_ITEMS [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CATEGORIES_QUANTITY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CATEGORY_WORDS_QUANTITY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export FULL_WORDS_LIST [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MAIN_PAGE_NUMBER [provided] [no usage info] [missing usage info prevents renaming] */
/*! export STATISTIC_DATA_TYPES_QUANTITY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export STATISTIC_PAGE_NUMBER [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CATEGORY_WORDS_QUANTITY\": () => /* binding */ CATEGORY_WORDS_QUANTITY,\n/* harmony export */   \"CATEGORIES_QUANTITY\": () => /* binding */ CATEGORIES_QUANTITY,\n/* harmony export */   \"BURGER_MENU_ITEMS\": () => /* binding */ BURGER_MENU_ITEMS,\n/* harmony export */   \"STATISTIC_DATA_TYPES_QUANTITY\": () => /* binding */ STATISTIC_DATA_TYPES_QUANTITY,\n/* harmony export */   \"FULL_WORDS_LIST\": () => /* binding */ FULL_WORDS_LIST,\n/* harmony export */   \"STATISTIC_PAGE_NUMBER\": () => /* binding */ STATISTIC_PAGE_NUMBER,\n/* harmony export */   \"MAIN_PAGE_NUMBER\": () => /* binding */ MAIN_PAGE_NUMBER\n/* harmony export */ });\nconst CATEGORY_WORDS_QUANTITY = 8;\nconst CATEGORIES_QUANTITY = 8;\nconst BURGER_MENU_ITEMS = 10; // cards items + main page + statistic page\nconst STATISTIC_DATA_TYPES_QUANTITY = 7;\nconst FULL_WORDS_LIST = 64;\nconst STATISTIC_PAGE_NUMBER = 9;\nconst MAIN_PAGE_NUMBER = 0;\n\n\n//# sourceURL=webpack://english-for-kids/./constants.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__("./appController.js");
/******/ })()
;